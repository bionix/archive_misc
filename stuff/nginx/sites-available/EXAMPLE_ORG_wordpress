server {
	listen [::]:80;
	root /srv/www/EXAMPLE_ORG/www;

	index index.php;

	access_log /var/log/nginx/EXAMPLE_ORG_access.log main;
	error_log /var/log/nginx/EXAMPLE_ORG_error.log;

	server_name www.EXAMPLE.ORG EXAMPLE.ORG;

	location = /readme.html {
	## HTACCESS ##
                auth_basic            "DENIED";
                auth_basic_user_file /srv/www/EXAMPLE_ORG/htaccess/EXAMPLE_ORG.auth;
                access_log off;
	}
    location ~ /wp-(admin|login) {
                rewrite ^ https://$host$uri permanent;
                access_log off;
    }

	location @nocache {
            try_files $uri $uri/ /index.php?q=$uri&$args;
        }

	## Pseudo streaming for FLVs.
        ## http://wiki.nginx.org/HttpFlvStreamModule.
        location ~* \.flv$ {
            flv;
        }

        ## Pseudo streaming of H264/AAC files. This requires an Nginx
        ## version greater or equal to 1.0.7 for the stable branch and
        ## greater or equal to 1.1.3 for the development branch.
        ## Cf. http://nginx.org/en/docs/http/ngx_http_mp4_module.html.
        location ~* .*\.(?:m4a|mp4|mov)$ {
            mp4;
            mp4_buffer_size     1M;
            mp4_max_buffer_size 5M;
        }

        ## Keep a tab on the 'big' static files.
        location ~* ^.+\.(?:ogg|pdf|pptx?)$ {
            expires 30d;
            ## No need to bleed constant updates. Send the all shebang in one
            ## fell swoop.
            tcp_nodelay off;
        }

        location / {
                # First attempt to serve request as file, then
                # as directory, then fall back to displaying a 404.

	## Include the WP supercache config.
        include /etc/nginx/adminvslife_wp_supercache.conf;

        }

        rewrite /wp-admin$ $scheme://$host$uri/ permanent;

	if (!-e $request_filename) {
    		rewrite ^.*$ /index.php last;
	}

       # Deny all attempts to access hidden files such as .htaccess, .htpasswd, .DS_Store (Mac).
       location ~ /\. {
                deny all;
                access_log off;
                log_not_found off;
       }
        location ~ /\.ht {
                deny all;
                access_log off;
                log_not_found off;
        }
       location = /favicon.ico {
                log_not_found off;
                access_log off;
       }
       location = /robots.txt {
                allow all;
                log_not_found off;
                access_log off;
       }

       location ~* ^.*(\.(?:git|svn|htaccess|txt|pot?))$ {
            return 404;
       }

	### CACHING
	#
# Define default caching of 24h
expires 86400s;
add_header Pragma public;
add_header Cache-Control "max-age=86400, public, must-revalidate, proxy-revalidate";

# Rewrite for versioned CSS+JS via filemtime
location ~* ^.+\.(css|js)$ {
	rewrite ^(.+)\.(\d+)\.(css|js)$ $1.$3 last;
	expires 31536000s;
	access_log off;
	log_not_found off;
	add_header Pragma public;
	add_header Cache-Control "max-age=31536000, public";
}

location ~ \.(asf|asx|wax|wmv|wmx|avi|bmp|class|divx|doc|docx|exe|gif|gz|gzip|ico|jpg|jpeg|jpe|mdb|mid|midi|mov|qt|mp3|m4a|mp4|m4v|mpeg|mpg|mpe|mpp|odb|odc|odf|odg|odp|ods|odt|ogg|pdf|png|pot|pps|ppt|pptx|ra|ram|swf|tar|tif|tiff|wav|wma|wri|xla|xls|xlsx|xlt|xlw|zip)$ {
	### Aggressive caching for static files
        	expires 31536000s;
        	access_log off;
        	log_not_found off;
        	add_header Pragma public;
        	add_header Cache-Control "max-age=31536000, public";
    	}



	location ~* (^(?!(?:(?!(php|inc)).)*/blogs\.dir/).*?(php|inc)) {
	  try_files $uri = 404;
	  fastcgi_split_path_info ^(.+.php)(.*)$;
	  fastcgi_pass  unix:/var/run/php5-fpm.sock;
	  fastcgi_index index.php;
	  fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
	  include fastcgi_params;
	}
}

# HTTPS server
#
server {
	#listen 443;

	listen [::]:443;
	server_name www.EXAMPLE.ORG EXAMPLE.ORG;

	root /srv/www/EXAMPLE_ORG/www;

	index index.php;

	access_log /var/log/nginx/EXAMPLE_ORG_access.log main;
	error_log /var/log/nginx/EXAMPLE_ORG_error.log;

	ssl on;
	ssl_certificate /etc/nginx/ssl/wildcard_EXAMPLE_ORG.crt;
	ssl_certificate_key /etc/nginx/ssl/wildcard_EXAMPLE_ORG.key;

	ssl_session_timeout 5m;
    ssl_session_cache shared:SSL:10m;

    ssl_protocols SSLv3 TLSv1 TLSv1.1 TLSv1.2;
    ssl_ciphers ECDHE-RSA-AES256-SHA384:AES256-SHA256:RC4:HIGH:!aNULL:!MD5:!EDH:!AESGCM;
    ssl_prefer_server_ciphers on;
    ssl_ecdh_curve secp521r1;

	keepalive_timeout 75 75;

	add_header Strict-Transport-Security "max-age=7200";

	location = /readme.html {
	## HTACCESS ##
                auth_basic            "DENIED";
                auth_basic_user_file  /srv/www/EXAMPLE_ORG/htaccess/EXAMPLE_ORG.auth;
                access_log off;
	}

	 location = /wp-admin$ {
	        ## HTACCESS ##
                auth_basic            "DENIED";
                auth_basic_user_file  /srv/www/EXAMPLE_ORG/htaccess/EXAMPLE_ORG.auth;
                access_log off;
        }
	 location = /wp-login$ {
	        ## HTACCESS ##
                auth_basic            "DENIED";
                auth_basic_user_file  /srv/www/EXAMPLE_ORG/htaccess/EXAMPLE_ORG.auth;
                access_log off;
        }

	location @nocache {
            try_files $uri $uri/ /index.php?q=$uri&$args;
        }


        ## Pseudo streaming for FLVs.
        ## http://wiki.nginx.org/HttpFlvStreamModule.
        location ~* \.flv$ {
            flv;
        }

        ## Pseudo streaming of H264/AAC files. This requires an Nginx
        ## version greater or equal to 1.0.7 for the stable branch and
        ## greater or equal to 1.1.3 for the development branch.
        ## Cf. http://nginx.org/en/docs/http/ngx_http_mp4_module.html.
        location ~* .*\.(?:m4a|mp4|mov)$ {
            mp4;
            mp4_buffer_size     1M;
            mp4_max_buffer_size 5M;
        }

        ## Keep a tab on the 'big' static files.
        location ~* ^.+\.(?:ogg|pdf|pptx?)$ {
            expires 30d;
            ## No need to bleed constant updates. Send the all shebang in one
            ## fell swoop.
            tcp_nodelay off;
        }

       location / {
                # First attempt to serve request as file, then
                # as directory, then fall back to displaying a 404.

###                try_files $uri $uri/ /index.php?$args;

	## Include the WP supercache config.
        include /etc/nginx/adminvslife_wp_supercache.conf;

        }

        rewrite /wp-admin$ $scheme://$host$uri/ permanent;


	if (!-e $request_filename) {
    		rewrite ^.*$ /index.php last;
	}

       # Deny all attempts to access hidden files such as .htaccess, .htpasswd, .DS_Store (Mac).
       location ~ /\. {
                deny all;
                access_log off;
                log_not_found off;
       }
        location ~ /\.ht {
                deny all;
                access_log off;
                log_not_found off;
        }
       location = /favicon.ico {
                log_not_found off;
                access_log off;
       }
       location = /robots.txt {
                allow all;
                log_not_found off;
                access_log off;
       }

       location ~* ^.*(\.(?:git|svn|htaccess|txt|pot?))$ {
            return 404;
       }

	### CACHING
	#
# Define default caching of 24h
expires 86400s;
add_header Pragma public;
add_header Cache-Control "max-age=86400, public, must-revalidate, proxy-revalidate";

# Rewrite for versioned CSS+JS via filemtime
location ~* ^.+\.(css|js)$ {
	rewrite ^(.+)\.(\d+)\.(css|js)$ $1.$3 last;
	expires 31536000s;
	access_log off;
	log_not_found off;
	add_header Pragma public;
	add_header Cache-Control "max-age=31536000, public";
}

location ~ \.(asf|asx|wax|wmv|wmx|avi|bmp|class|divx|doc|docx|exe|gif|gz|gzip|ico|jpg|jpeg|jpe|mdb|mid|midi|mov|qt|mp3|m4a|mp4|m4v|mpeg|mpg|mpe|mpp|odb|odc|odf|odg|odp|ods|odt|ogg|pdf|png|pot|pps|ppt|pptx|ra|ram|swf|tar|tif|tiff|wav|wma|wri|xla|xls|xlsx|xlt|xlw|zip)$ {
	### Aggressive caching for static files
        	expires 31536000s;
        	access_log off;
        	log_not_found off;
        	add_header Pragma public;
        	add_header Cache-Control "max-age=31536000, public";
    	}

	location ~* (^(?!(?:(?!(php|inc)).)*/blogs\.dir/).*?(php|inc)) {
	  try_files $uri = 404;
	  fastcgi_split_path_info ^(.+.php)(.*)$;
	  fastcgi_pass  unix:/var/run/php5-fpm.sock;
	  fastcgi_index index.php;
	  fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
	  include fastcgi_params;
	}
}
